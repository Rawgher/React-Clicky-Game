{"version":3,"sources":["components/BackgroundArea/BackgroundImage/spiderman-logo.jpg","components/Modal/BackgroundImage/modalbackground.jpg","components/Footer/Footer.js","components/Header/Header.js","components/Jumbotron/Jumbotron.js","components/ImageCard/ImageCard.js","components/Wrapper/Wrapper.js","components/BackgroundArea/BackgroundArea.js","components/Modal/Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","href","target","rel","Header","props","message","userScore","highScore","Jumbotron","ImageCard","onClick","selectImage","id","src","image","alt","name","Wrapper","children","sectionStyle","backgroundImage","concat","Background","BackgroundArea","style","Modal","div","modal","display","opacity","tabIndex","role","aria-labelledby","aria-hidden","gif","imgName","type","data-dismiss","closeModal","App","state","images","chosenImageArray","_this","setState","shuffle","indexOf","push","length","j","x","i","Math","floor","random","_this2","this","components_Wrapper_Wrapper","components_Header_Header","components_Jumbotron_Jumbotron","components_BackgroundArea_BackgroundArea","map","components_ImageCard_ImageCard","key","components_Modal_Modal","components_Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bdaa19e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spiderman-logo.de0f377b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/modalbackground.65f2325f.jpg\";","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n\n<div className=\"card-footer white bg-danger\">\n<h6 className=\"float-left\">@Rawgher</h6>\n<h6 className=\"f6 float-right\"><a href=\"https://github.com/Rawgher\" target=\"_blank\" rel=\"noreferrer noopener\" className=\"white\">Github |</a> \n  <a href=\"https://www.linkedin.com/in/roger-pender-2b564bb4\" target=\"_blank\" rel=\"noreferrer noopener\" className=\"white\"> LinkedIn</a></h6>\n</div>\n)\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => <div className=\"header\">\n\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-danger white\">\n   <h3 className=\"nav-item justify-self-start\">Clicky Game</h3>\n   <h3 className=\"nav-item justify-self-center\">{props.message}</h3>\n   <h3 className=\"nav-item justify-self-end\">Score: {props.userScore || 0} | High Score: {props.highScore}</h3>\n  </nav>\n</div>\n\nexport default Header;","import React from \"react\";\nimport \"./Jumbotron.css\";\n\n\nconst Jumbotron = () => <div className=\"jumbotron jumbotron-fluid text-center bg-primary\">\n<div className=\"container\">\n  <h1 className=\"display-4 white\">Spiderman Suit Memory Game</h1>\n  <h4 className=\"lead white\">Try to only click all twelve suits once to win!</h4>\n</div>\n</div>\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./ImageCard.css\";\n\nconst ImageCard = props => (\n<div className=\"card-container\">\n<span onClick={() => props.selectImage(props.id)}>\n  <div className=\"card float-left\">\n\n  <img className=\"card-img-top content img-container\" src={props.image} alt={props.name} />\n\n  </div>\n  </span>\n  </div>\n);\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div>{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./BackgroundArea.css\";\nimport Background from './BackgroundImage/spiderman-logo.jpg';\n\nconst sectionStyle = {\n  backgroundImage: `url(${Background})` \n}\n\nconst BackgroundArea = props => (\n\n<div style={sectionStyle} className=\"sizing\">{props.children}</div>\n/* <div className=\"background\">{props.children}</div> */\n)\n\nexport default BackgroundArea;\n","import React from \"react\";\nimport \"./Modal.css\";\nimport Background from './BackgroundImage/modalbackground.jpg';\n\nconst sectionStyle = {\n  backgroundImage: `url(${Background})`\n}\n\n\n\nconst Modal = props => <div div className=\"modal fade\" style={(props.modal) ? { display: \"block\", opacity: 1 } : {}} id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div className=\"modal-content\" style={sectionStyle}>\n      <div className=\"modal-header noBorder\">\n        <h3 className=\"modal-title blockIt white\" id=\"exampleModalLongTitle\">{props.message}</h3>\n      </div>\n      <div className=\"modal-body noBorder\">\n        <img src={props.gif} alt={props.imgName} className=\"blockIt\"/>\n      </div>\n      <div className=\"modal-footer noBorder\">\n      <button type=\"button\" className=\"btn btn-secondary blockIt\" data-dismiss=\"modal\" onClick={props.closeModal}>Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\nexport default Modal;","import React, { Component } from 'react';\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\"\nimport images from \"./images.json\"\nimport BackgroundArea from \"./components/BackgroundArea\"\nimport Modal from \"./components/Modal\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    images,\n    chosenImageArray: [],\n    highScore: 0,\n    userScore: 0,\n    message: \"Click an Image to Start!\",\n    modal: false,\n    gif: \"\",\n    imgName: \"\"\n  };\n\n  selectImage = id => {\n\n    this.setState({ images: this.shuffle(this.state.images) });\n\n    if (this.state.chosenImageArray.indexOf(id) === -1) {\n      \n      this.state.chosenImageArray.push(id)\n\n      this.setState({\n        chosenImageArray: this.state.chosenImageArray,\n        userScore: this.state.userScore + 1,\n        message: \"Good choice!\"\n      })\n\n      if(this.state.userScore >= this.state.highScore) {\n        this.setState({ highScore: this.state.userScore + 1 })\n      }\n\n      if (this.state.chosenImageArray.length === this.state.images.length ) {\n        this.setState({\n          chosenImageArray: [],\n          modal: true,\n          highScore: 0,\n          userScore: 0,\n          message: \"You won! Spiddy's proud of you!\",\n          gif: \"./images/happySpiddy.gif\",\n          imgName: \"Happy Spiddy\"\n        })\n      }\n\n    } else {\n      this.setState({\n        chosenImageArray: [],\n        userScore: 0,\n        message: \"Better luck next time!\",\n        modal: true,\n        gif: \"./images/sadSpiddy.gif\",\n        imgName: \"Sad Spiddy\"\n      })\n\n      if (this.state.userScore > this.state.highScore) {\n        this.setState({\n          highScore: this.state.userScore\n        })\n      }\n    }\n\n  };\n\n  shuffle = a => {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  }\n\n  closeModal = () => {\n    this.setState({\n      modal: false\n    })\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header \n        userScore={this.state.userScore}\n        highScore={this.state.highScore}\n        message={this.state.message}\n        />\n        <Jumbotron />\n        <BackgroundArea>\n        {this.state.images.map(image => (\n          <ImageCard\n            selectImage={this.selectImage}\n            id={image.id}\n            key={image.id}\n            name={image.name}\n            image={image.image}\n          />\n        ))}\n        <Modal \n        modal={this.state.modal}\n        closeModal={this.closeModal}\n        message={this.state.message}\n        gif={this.state.gif}\n        imgName={this.state.imgName} />\n        </BackgroundArea>\n        <Footer />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}